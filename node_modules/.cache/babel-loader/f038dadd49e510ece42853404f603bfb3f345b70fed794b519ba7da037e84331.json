{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NEW\\\\Desktop\\\\country api-react\\\\src\\\\main\\\\Mymain.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport \"./Mymain.css\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport Dropdown from \"./dropdown\";\nimport FormInput from \"./form\";\nimport CountryCards from \"./countryCards\";\nimport Detailspage from \"./details\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [selected, setSelected] = useState(\"Filter By Region\");\n  // const [countryDetail, setCountryDetail] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const searchParam = async input => {\n    const res = await fetch(`https://restcountries.com/v3.1/name/${input}`);\n    setInput(input);\n  };\n\n  // default browser\n  useEffect(() => {\n    const searchCountry = async () => {\n      try {\n        const response = await axios.get(`https://restcountries.com/v3.1/all`);\n        setCountries(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    searchCountry();\n  }, []);\n  // default browser\n\n  // useEffect(() => {\n  //   const searchCountry = async () => {\n  //     // try {\n  //     //   const response = await axios.get(\n  //     //     `https://restcountries.com/v3.1/region/${input}`\n  //     //   );\n  //     //   console.log(response.data);\n  //     //   setCountries(response.data);\n  //     // } catch (error) {\n  //     //   console.error(\"Error fetching data:\", error);\n  //     // }\n  //   };\n  //   searchCountry();\n  // }, [input, countries]);\n\n  // useEffect(() => {\n  //   const searchCountry = async () => {\n  //     if (selected !== \"Filter By Region\") {\n  //       try {\n  //         const response = await axios.get(\n  //           `https://restcountries.com/v3.1/region/${selected}`\n  //         );\n  //         setCountries(response.data);\n  //       } catch (error) {\n  //         console.error(\"Error fetching data:\", error);\n  //       }\n  //     } else {\n  //       try {\n  //         const response = await axios.get(\n  //           `https://restcountries.com/v3.1/region/${input}`\n  //         );\n  //         console.log(response.data);\n  //         setCountries(response.data);\n  //       } catch (error) {\n  //         console.error(\"Error fetching data:\", error);\n  //       }\n  //     }\n  //   };\n  //   searchCountry();\n  // }, [input, selected]);\n  // useEffect(() => {\n  //   const searchCountry = async () => {\n  //     if (selected === \"Filter By Region\" && input === \"\") {\n  //       try {\n  //         const response = await axios.get(\n  //           `https://restcountries.com/v3.1/region/${\"africa\"}`\n  //         );\n  //         setCountries(response.data);\n  //       } catch (error) {\n  //         console.error(\"Error fetching data:\", error);\n  //       }\n  //     } else if (selected !== \"Filter By Region\") {\n  //       try {\n  //         const response = await axios.get(\n  //           `https://restcountries.com/v3.1/region/${selected}`\n  //         );\n  //         setCountries(response.data);\n  //       } catch (error) {\n  //         console.error(\"Error fetching data:\", error);\n  //       }\n  //     } else {\n  //       try {\n  //         const response = await axios.get(\n  //           `https://restcountries.com/v3.1/name/${input}`\n  //         );\n  //         console.log(response.data);\n  //         setCountries(response.data);\n  //       } catch (error) {\n  //         console.error(\"Error fetching data:\", error);\n  //       }\n  //     }\n  //   };\n  //   searchCountry();\n  // }, [input, selected,countries]);\n\n  // useEffect(() => {\n  //   const searchCountry = async () => {\n  // try {\n  //   const response = await axios.get(\n  //     `https://restcountries.com/v3.1/name/${input}`\n  //   );\n  //   console.log(response.data);\n  //   setCountries(response.data);\n  // } catch (error) {\n  //   console.error(\"Error fetching data:\", error);\n  // }\n  //   };\n  //   searchCountry();\n  // }, [input,countries]);\n\n  // useEffect(() => {\n  //   const searchCountry = async () => {\n  //     if (selected !== \"Filter By Region\" ) {\n  //       try {\n  //         const response = await axios.get(\n  //           `https://restcountries.com/v3.1/region/${selected}`\n  //         );\n  //         setCountries(response.data);\n  //       } catch (error) {\n  //         console.error(\"Error fetching data:\", error);\n  //       }\n  //     } else {\n  //       try {\n  //         const response = await axios.get(\n  //           `https://restcountries.com/v3.1/region/${\"africa\"}`\n  //         );\n  //         setCountries(response.data);\n  //       } catch (error) {\n  //         console.error(\"Error fetching data:\", error);\n  //       }\n  //     }\n  //   };\n  //   searchCountry();\n  // }, [selected]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-div\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-search-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          sendSearchParam: searchParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          selected: selected,\n          setSelected: setSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              exact: true,\n              element: /*#__PURE__*/_jsxDEV(CountryCards, {\n                countries: countries\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/country/:countryCode\",\n              element: /*#__PURE__*/_jsxDEV(Detailspage, {\n                countries: countries\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"Q+hRNBSC5qyXKJ0xnxOgxaHkbWI=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","useEffect","axios","Dropdown","FormInput","CountryCards","Detailspage","useState","jsxDEV","_jsxDEV","Main","_s","selected","setSelected","countries","setCountries","input","setInput","searchParam","res","fetch","searchCountry","response","get","data","error","console","className","children","sendSearchParam","fileName","_jsxFileName","lineNumber","columnNumber","path","exact","element","_c","$RefreshReg$"],"sources":["C:/Users/NEW/Desktop/country api-react/src/main/Mymain.js"],"sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport \"./Mymain.css\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Dropdown from \"./dropdown\";\r\nimport FormInput from \"./form\";\r\nimport CountryCards from \"./countryCards\";\r\nimport Detailspage from \"./details\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Main() {\r\n  const [selected, setSelected] = useState(\"Filter By Region\");\r\n  // const [countryDetail, setCountryDetail] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const searchParam = async (input) => {\r\n    const res = await fetch(`https://restcountries.com/v3.1/name/${input}`)\r\n    setInput(input);\r\n  };\r\n\r\n  \r\n// default browser\r\n  useEffect(() => {\r\n    const searchCountry = async () => {\r\n      try {\r\n        const response = await axios.get(`https://restcountries.com/v3.1/all`);\r\n        setCountries(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    searchCountry();\r\n  }, []);\r\n// default browser\r\n  \r\n  \r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n  \r\n  \r\n\r\n  // useEffect(() => {\r\n  //   const searchCountry = async () => {\r\n  //     // try {\r\n  //     //   const response = await axios.get(\r\n  //     //     `https://restcountries.com/v3.1/region/${input}`\r\n  //     //   );\r\n  //     //   console.log(response.data);\r\n  //     //   setCountries(response.data);\r\n  //     // } catch (error) {\r\n  //     //   console.error(\"Error fetching data:\", error);\r\n  //     // }\r\n  //   };\r\n  //   searchCountry();\r\n  // }, [input, countries]);\r\n\r\n  // useEffect(() => {\r\n  //   const searchCountry = async () => {\r\n  //     if (selected !== \"Filter By Region\") {\r\n  //       try {\r\n  //         const response = await axios.get(\r\n  //           `https://restcountries.com/v3.1/region/${selected}`\r\n  //         );\r\n  //         setCountries(response.data);\r\n  //       } catch (error) {\r\n  //         console.error(\"Error fetching data:\", error);\r\n  //       }\r\n  //     } else {\r\n  //       try {\r\n  //         const response = await axios.get(\r\n  //           `https://restcountries.com/v3.1/region/${input}`\r\n  //         );\r\n  //         console.log(response.data);\r\n  //         setCountries(response.data);\r\n  //       } catch (error) {\r\n  //         console.error(\"Error fetching data:\", error);\r\n  //       }\r\n  //     }\r\n  //   };\r\n  //   searchCountry();\r\n  // }, [input, selected]);\r\n  // useEffect(() => {\r\n  //   const searchCountry = async () => {\r\n  //     if (selected === \"Filter By Region\" && input === \"\") {\r\n  //       try {\r\n  //         const response = await axios.get(\r\n  //           `https://restcountries.com/v3.1/region/${\"africa\"}`\r\n  //         );\r\n  //         setCountries(response.data);\r\n  //       } catch (error) {\r\n  //         console.error(\"Error fetching data:\", error);\r\n  //       }\r\n  //     } else if (selected !== \"Filter By Region\") {\r\n  //       try {\r\n  //         const response = await axios.get(\r\n  //           `https://restcountries.com/v3.1/region/${selected}`\r\n  //         );\r\n  //         setCountries(response.data);\r\n  //       } catch (error) {\r\n  //         console.error(\"Error fetching data:\", error);\r\n  //       }\r\n  //     } else {\r\n  //       try {\r\n  //         const response = await axios.get(\r\n  //           `https://restcountries.com/v3.1/name/${input}`\r\n  //         );\r\n  //         console.log(response.data);\r\n  //         setCountries(response.data);\r\n  //       } catch (error) {\r\n  //         console.error(\"Error fetching data:\", error);\r\n  //       }\r\n  //     }\r\n  //   };\r\n  //   searchCountry();\r\n  // }, [input, selected,countries]);\r\n\r\n  // useEffect(() => {\r\n  //   const searchCountry = async () => {\r\n  // try {\r\n  //   const response = await axios.get(\r\n  //     `https://restcountries.com/v3.1/name/${input}`\r\n  //   );\r\n  //   console.log(response.data);\r\n  //   setCountries(response.data);\r\n  // } catch (error) {\r\n  //   console.error(\"Error fetching data:\", error);\r\n  // }\r\n  //   };\r\n  //   searchCountry();\r\n  // }, [input,countries]);\r\n\r\n  // useEffect(() => {\r\n  //   const searchCountry = async () => {\r\n  //     if (selected !== \"Filter By Region\" ) {\r\n  //       try {\r\n  //         const response = await axios.get(\r\n  //           `https://restcountries.com/v3.1/region/${selected}`\r\n  //         );\r\n  //         setCountries(response.data);\r\n  //       } catch (error) {\r\n  //         console.error(\"Error fetching data:\", error);\r\n  //       }\r\n  //     } else {\r\n  //       try {\r\n  //         const response = await axios.get(\r\n  //           `https://restcountries.com/v3.1/region/${\"africa\"}`\r\n  //         );\r\n  //         setCountries(response.data);\r\n  //       } catch (error) {\r\n  //         console.error(\"Error fetching data:\", error);\r\n  //       }\r\n  //     }\r\n  //   };\r\n  //   searchCountry();\r\n  // }, [selected]);\r\n\r\n  return (\r\n    <div className=\"main-div\">\r\n      <main>\r\n        <div className=\"input-search-dropdown\">\r\n          <FormInput sendSearchParam={searchParam} />\r\n          <Dropdown selected={selected} setSelected={setSelected} />\r\n        </div>\r\n        <Router>\r\n          <div>\r\n            <Routes>\r\n              <Route\r\n                path=\"/\"\r\n                exact\r\n                element={<CountryCards countries={countries} />}\r\n              />\r\n\r\n              <Route\r\n                path=\"/country/:countryCode\"\r\n                element={<Detailspage countries={countries} />}\r\n              />\r\n            </Routes>\r\n          </div>\r\n        </Router>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}