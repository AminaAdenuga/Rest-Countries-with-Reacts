{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NEW\\\\Desktop\\\\country api-react\\\\src\\\\main\\\\Mymain.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./Mymain.css\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport Dropdown from \"./dropdown\";\nimport FormInput from \"./form\";\nimport CountryCards from \"./countryCards\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [selected, setSelected] = useState(\"Filter By Region\");\n  const [countries, setCountries] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const searchParam = input => {\n    setInput(input);\n  };\n  useEffect(() => {\n    const searchCountry = async () => {\n      try {\n        const response = await axios.get(`https://restcountries.com/v3.1/region/${input}`);\n        const res = await axios.get(`https://restcountries.com/v3.1/region/${selected}`);\n        setCountries(response.data);\n        setCountries(res.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    searchCountry();\n  }, [input, selected]);\n  // const [query, setQuery] = useState(\"\");\n\n  console.log(selected);\n\n  // if (selected != \"Filter By Region\") {\n  //   const arr = [];\n  //   response.data.filter((item) => {\n  //     // const arr = [...countries, ...item];\n  //     // console.log(arr);\n  //     // setCountries(arr);\n  //     // console.log(item);\n  //     console.log(item);\n\n  //     if (item.continents[0] === selected) {\n  //       // console.log(item);\n  //       arr.push(item);\n  //       // setCountries([...countries, item]);\n  //       // console.log([...countries, item]);\n  //       // console.log(item);\n\n  //       // console.log(selected);\n  //     }\n  //   });\n  //   setCountries(arr);\n  // } else {\n  //   setCountries(response.data);\n  // }\n  // console.log(countries);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-div\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-search-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          sendSearchParam: searchParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          selected: selected,\n          setSelected: setSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CountryCards, {\n        countries: countries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"Q+hRNBSC5qyXKJ0xnxOgxaHkbWI=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","axios","Dropdown","FormInput","CountryCards","useState","jsxDEV","_jsxDEV","Main","_s","selected","setSelected","countries","setCountries","input","setInput","searchParam","searchCountry","response","get","res","data","error","console","log","className","children","sendSearchParam","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/NEW/Desktop/country api-react/src/main/Mymain.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Mymain.css\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Dropdown from \"./dropdown\";\r\nimport FormInput from \"./form\";\r\nimport CountryCards from \"./countryCards\";\r\nimport { useState } from \"react\";\r\nfunction Main() {\r\n  const [selected, setSelected] = useState(\"Filter By Region\");\r\n  const [countries, setCountries] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const searchParam = (input) => {\r\n    setInput(input);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const searchCountry = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://restcountries.com/v3.1/region/${input}`\r\n        );\r\n        const res = await axios.get(\r\n          `https://restcountries.com/v3.1/region/${selected}`\r\n        );\r\n        setCountries(response.data);\r\n        setCountries(res.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    searchCountry();\r\n  }, [input, selected]);\r\n  // const [query, setQuery] = useState(\"\");\r\n\r\n  console.log(selected);\r\n\r\n  // if (selected != \"Filter By Region\") {\r\n  //   const arr = [];\r\n  //   response.data.filter((item) => {\r\n  //     // const arr = [...countries, ...item];\r\n  //     // console.log(arr);\r\n  //     // setCountries(arr);\r\n  //     // console.log(item);\r\n  //     console.log(item);\r\n\r\n  //     if (item.continents[0] === selected) {\r\n  //       // console.log(item);\r\n  //       arr.push(item);\r\n  //       // setCountries([...countries, item]);\r\n  //       // console.log([...countries, item]);\r\n  //       // console.log(item);\r\n\r\n  //       // console.log(selected);\r\n  //     }\r\n  //   });\r\n  //   setCountries(arr);\r\n  // } else {\r\n  //   setCountries(response.data);\r\n  // }\r\n  // console.log(countries);\r\n  return (\r\n    <div className=\"main-div\">\r\n      <main>\r\n        <div className=\"input-search-dropdown\">\r\n          <FormInput sendSearchParam={searchParam} />\r\n          <Dropdown selected={selected} setSelected={setSelected} />\r\n        </div>\r\n        <CountryCards countries={countries} />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nexport default Main;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,QAAQ;AAC9B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,kBAAkB,CAAC;EAC5D,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,WAAW,GAAIF,KAAK,IAAK;IAC7BC,QAAQ,CAACD,KAAK,CAAC;EACjB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAC7B,yCAAwCL,KAAM,EACjD,CAAC;QACD,MAAMM,GAAG,GAAG,MAAMnB,KAAK,CAACkB,GAAG,CACxB,yCAAwCT,QAAS,EACpD,CAAC;QACDG,YAAY,CAACK,QAAQ,CAACG,IAAI,CAAC;QAC3BR,YAAY,CAACO,GAAG,CAACC,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDL,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACH,KAAK,EAAEJ,QAAQ,CAAC,CAAC;EACrB;;EAEAa,OAAO,CAACC,GAAG,CAACd,QAAQ,CAAC;;EAErB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACEH,OAAA;IAAKkB,SAAS,EAAC,UAAU;IAAAC,QAAA,eACvBnB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAKkB,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBACpCnB,OAAA,CAACJ,SAAS;UAACwB,eAAe,EAAEX;QAAY;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3CxB,OAAA,CAACL,QAAQ;UAACQ,QAAQ,EAAEA,QAAS;UAACC,WAAW,EAAEA;QAAY;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eACNxB,OAAA,CAACH,YAAY;QAACQ,SAAS,EAAEA;MAAU;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACtB,EAAA,CAhEQD,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AAiEb,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}