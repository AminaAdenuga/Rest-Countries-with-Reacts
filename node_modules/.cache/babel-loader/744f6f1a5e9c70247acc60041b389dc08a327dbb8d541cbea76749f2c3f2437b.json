{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NEW\\\\Desktop\\\\country api-react\\\\src\\\\main\\\\Mymain.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport \"./Mymain.css\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\n// import Dropdown from \"./dropdown\";\n// import FormInput from \"./form\";\nimport CountryCards from \"./countryCards\";\nimport Detailspage from \"./details\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const getMycountries = async countries => {\n    try {\n      const response = await axios.get(`https://restcountries.com/v3.1/all`);\n      setCountries(response.data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  // default for search button onSunmit\n  // const searchParam = async (input) => {\n  //   try {\n  //     const res = await fetch(`https://restcountries.com/v3.1/name/${input}`);\n  //     if (!res.ok) throw new Error(\"Not found in any country!\");\n  //     const data = await res.json();\n  //     setCountries(data);\n  //     console.log(countries);\n  //   } catch (error) {\n  //     console.error(\"Error fetching data:\", error);\n  //   }\n  // };\n  // default for search button onSunmit\n\n  // default browser\n  useEffect(() => {\n    const getMycountries = async () => {\n      try {\n        const response = await axios.get(`https://restcountries.com/v3.1/all`);\n        setCountries(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    getMycountries();\n  }, []);\n  // default browser\n\n  // default for dropdown continent selec\n  // const getCountryByRegion = async (regionName) => {\n  //   try {\n  //     const res = await fetch(\n  //       `https://restcountries.com/v3.1/region/${regionName}`\n  //     );\n  //     if (!res.ok) throw new Error(\"Not found in any country!\");\n  //     const data = await res.json();\n  //     setCountries(data);\n  //   } catch (error) {\n  //     console.error(\"Error fetching data:\", error);\n  //   }\n  // };\n  // default for dropdown continent selec\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-div\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              exact: true,\n              element: /*#__PURE__*/_jsxDEV(CountryCards, {\n                onCountries: getMycountries\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/country/:countryCode\",\n              element: /*#__PURE__*/_jsxDEV(Detailspage, {\n                countries: countries\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","useEffect","axios","CountryCards","Detailspage","useState","jsxDEV","_jsxDEV","Main","_s","countries","setCountries","getMycountries","response","get","data","error","console","className","children","path","exact","element","onCountries","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/NEW/Desktop/country api-react/src/main/Mymain.js"],"sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport \"./Mymain.css\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n// import Dropdown from \"./dropdown\";\r\n// import FormInput from \"./form\";\r\nimport CountryCards from \"./countryCards\";\r\nimport Detailspage from \"./details\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Main() {\r\n  const [countries, setCountries] = useState([]);\r\n  const getMycountries = async (countries) => {\r\n    try {\r\n      const response = await axios.get(`https://restcountries.com/v3.1/all`);\r\n      setCountries(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }\r\n  // default for search button onSunmit\r\n  // const searchParam = async (input) => {\r\n  //   try {\r\n  //     const res = await fetch(`https://restcountries.com/v3.1/name/${input}`);\r\n  //     if (!res.ok) throw new Error(\"Not found in any country!\");\r\n  //     const data = await res.json();\r\n  //     setCountries(data);\r\n  //     console.log(countries);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching data:\", error);\r\n  //   }\r\n  // };\r\n  // default for search button onSunmit\r\n\r\n  // default browser\r\n  useEffect(() => {\r\n    const getMycountries = async () => {\r\n      try {\r\n        const response = await axios.get(`https://restcountries.com/v3.1/all`);\r\n        setCountries(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    getMycountries();\r\n  }, []);\r\n  // default browser\r\n\r\n  // default for dropdown continent selec\r\n  // const getCountryByRegion = async (regionName) => {\r\n  //   try {\r\n  //     const res = await fetch(\r\n  //       `https://restcountries.com/v3.1/region/${regionName}`\r\n  //     );\r\n  //     if (!res.ok) throw new Error(\"Not found in any country!\");\r\n  //     const data = await res.json();\r\n  //     setCountries(data);\r\n  //   } catch (error) {\r\n  //     console.error(\"Error fetching data:\", error);\r\n  //   }\r\n  // };\r\n  // default for dropdown continent selec\r\n\r\n  return (\r\n    <div className=\"main-div\">\r\n      <main>\r\n        {/* <div className=\"input-search-dropdown\">\r\n          <FormInput sendSearchParam={searchParam} />\r\n          <Dropdown onSelect={getCountryByRegion} />\r\n        </div> */}\r\n        <Router>\r\n          <div>\r\n            <Routes>\r\n              <Route\r\n                path=\"/\"\r\n                exact\r\n                element={<CountryCards onCountries={getMycountries} />}\r\n              />\r\n\r\n              <Route\r\n                path=\"/country/:countryCode\"\r\n                element={<Detailspage countries={countries} />}\r\n              />\r\n            </Routes>\r\n          </div>\r\n        </Router>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}