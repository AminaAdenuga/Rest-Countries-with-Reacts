{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NEW\\\\Desktop\\\\country api-react\\\\src\\\\main\\\\Mymain.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport \"./Mymain.css\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport Dropdown from \"./dropdown\";\nimport FormInput from \"./form\";\nimport CountryCards from \"./countryCards\";\nimport Detailspage from \"./details\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  // const [countryDetail, setCountryDetail] = useState([]);\n  const [countries, setCountries] = useState([]);\n  // default for search button onSunmit\n  const searchParam = async input => {\n    try {\n      const res = await fetch(`https://restcountries.com/v3.1/name/${input}`);\n      if (!res.ok) throw new Error(\"Not found in any country!\");\n      const data = await res.json();\n      setCountries(data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  // default for search button onSunmit\n\n  // default browser\n  useEffect(() => {\n    const searchCountry = async () => {\n      try {\n        const response = await axios.get(`https://restcountries.com/v3.1/all`);\n        setCountries(response.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    searchCountry();\n  }, []);\n  const getCountryByRegion = async regionName => {\n    try {\n      const res = await fetch(`https://restcountries.com/v3.1/region/${regionName}`);\n      if (!res.ok) throw new Error(\"Not found in any country!\");\n      const data = await res.json();\n      setCountries(data);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  // default browser\n\n  // useEffect(() => {\n  //   const searchCountry = async () => {\n  //     // try {\n  //     //   const response = await axios.get(\n  //     //     `https://restcountries.com/v3.1/region/${input}`\n  //     //   );\n  //     //   console.log(response.data);\n  //     //   setCountries(response.data);\n  //     // } catch (error) {\n  //     //   console.error(\"Error fetching data:\", error);\n  //     // }\n  //   };\n  //   searchCountry();\n  // }, [input, countries]);\n\n  // useEffect(() => {\n  //   const searchCountry = async () => {\n  //     if (selected !== \"Filter By Region\") {\n  //       try {\n  //         const response = await axios.get(\n  //           `https://restcountries.com/v3.1/region/${selected}`\n  //         );\n  //         setCountries(response.data);\n  //       } catch (error) {\n  //         console.error(\"Error fetching data:\", error);\n  //       }\n  //     } else {\n  //       try {\n  //         const response = await axios.get(\n  //           `https://restcountries.com/v3.1/region/${input}`\n  //         );\n  //         console.log(response.data);\n  //         setCountries(response.data);\n  //       } catch (error) {\n  //         console.error(\"Error fetching data:\", error);\n  //       }\n  //     }\n  //   };\n  //   searchCountry();\n  // }, [input, selected]);\n  // useEffect(() => {\n  //   const searchCountry = async () => {\n  //     if (selected === \"Filter By Region\" && input === \"\") {\n  //       try {\n  //         const response = await axios.get(\n  //           `https://restcountries.com/v3.1/region/${\"africa\"}`\n  //         );\n  //         setCountries(response.data);\n  //       } catch (error) {\n  //         console.error(\"Error fetching data:\", error);\n  //       }\n  //     } else if (selected !== \"Filter By Region\") {\n  //       try {\n  //         const response = await axios.get(\n  //           `https://restcountries.com/v3.1/region/${selected}`\n  //         );\n  //         setCountries(response.data);\n  //       } catch (error) {\n  //         console.error(\"Error fetching data:\", error);\n  //       }\n  //     } else {\n  //       try {\n  //         const response = await axios.get(\n  //           `https://restcountries.com/v3.1/name/${input}`\n  //         );\n  //         console.log(response.data);\n  //         setCountries(response.data);\n  //       } catch (error) {\n  //         console.error(\"Error fetching data:\", error);\n  //       }\n  //     }\n  //   };\n  //   searchCountry();\n  // }, [input, selected,countries]);\n\n  // useEffect(() => {\n  //   const searchCountry = async () => {\n  // try {\n  //   const response = await axios.get(\n  //     `https://restcountries.com/v3.1/name/${input}`\n  //   );\n  //   console.log(response.data);\n  //   setCountries(response.data);\n  // } catch (error) {\n  //   console.error(\"Error fetching data:\", error);\n  // }\n  //   };\n  //   searchCountry();\n  // }, [input,countries]);\n\n  // useEffect(() => {\n  //   const searchCountry = async () => {\n  //     if (selected !== \"Filter By Region\" ) {\n  //       try {\n  //         const response = await axios.get(\n  //           `https://restcountries.com/v3.1/region/${selected}`\n  //         );\n  //         setCountries(response.data);\n  //       } catch (error) {\n  //         console.error(\"Error fetching data:\", error);\n  //       }\n  //     } else {\n  //       try {\n  //         const response = await axios.get(\n  //           `https://restcountries.com/v3.1/region/${\"africa\"}`\n  //         );\n  //         setCountries(response.data);\n  //       } catch (error) {\n  //         console.error(\"Error fetching data:\", error);\n  //       }\n  //     }\n  //   };\n  //   searchCountry();\n  // }, [selected]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-div\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-search-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          sendSearchParam: searchParam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          onSelect: getCountryByRegion,\n          selected: selected,\n          setSelected: setSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              exact: true,\n              element: /*#__PURE__*/_jsxDEV(CountryCards, {\n                countries: countries\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/country/:countryCode\",\n              element: /*#__PURE__*/_jsxDEV(Detailspage, {\n                countries: countries\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 26\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"u5xOCJaVOCLA9QSfvEC1BLxOVIw=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","useEffect","axios","Dropdown","FormInput","CountryCards","Detailspage","useState","jsxDEV","_jsxDEV","Main","_s","countries","setCountries","searchParam","input","res","fetch","ok","Error","data","json","error","console","searchCountry","response","get","getCountryByRegion","regionName","className","children","sendSearchParam","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","selected","setSelected","path","exact","element","_c","$RefreshReg$"],"sources":["C:/Users/NEW/Desktop/country api-react/src/main/Mymain.js"],"sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport \"./Mymain.css\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Dropdown from \"./dropdown\";\r\nimport FormInput from \"./form\";\r\nimport CountryCards from \"./countryCards\";\r\nimport Detailspage from \"./details\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Main() {\r\n  // const [countryDetail, setCountryDetail] = useState([]);\r\n  const [countries, setCountries] = useState([]);\r\n  // default for search button onSunmit\r\n  const searchParam = async (input) => {\r\n    try {\r\n      const res = await fetch(`https://restcountries.com/v3.1/name/${input}`);\r\n      if (!res.ok) throw new Error(\"Not found in any country!\");\r\n      const data = await res.json();\r\n      setCountries(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  // default for search button onSunmit\r\n\r\n  // default browser\r\n  useEffect(() => {\r\n    const searchCountry = async () => {\r\n      try {\r\n        const response = await axios.get(`https://restcountries.com/v3.1/all`);\r\n        setCountries(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n    searchCountry();\r\n  }, []);\r\n\r\n  const getCountryByRegion = async (regionName) => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://restcountries.com/v3.1/region/${regionName}`\r\n      );\r\n      if (!res.ok) throw new Error(\"Not found in any country!\");\r\n      const data = await res.json();\r\n      setCountries(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  };\r\n  // default browser\r\n\r\n  // useEffect(() => {\r\n  //   const searchCountry = async () => {\r\n  //     // try {\r\n  //     //   const response = await axios.get(\r\n  //     //     `https://restcountries.com/v3.1/region/${input}`\r\n  //     //   );\r\n  //     //   console.log(response.data);\r\n  //     //   setCountries(response.data);\r\n  //     // } catch (error) {\r\n  //     //   console.error(\"Error fetching data:\", error);\r\n  //     // }\r\n  //   };\r\n  //   searchCountry();\r\n  // }, [input, countries]);\r\n\r\n  // useEffect(() => {\r\n  //   const searchCountry = async () => {\r\n  //     if (selected !== \"Filter By Region\") {\r\n  //       try {\r\n  //         const response = await axios.get(\r\n  //           `https://restcountries.com/v3.1/region/${selected}`\r\n  //         );\r\n  //         setCountries(response.data);\r\n  //       } catch (error) {\r\n  //         console.error(\"Error fetching data:\", error);\r\n  //       }\r\n  //     } else {\r\n  //       try {\r\n  //         const response = await axios.get(\r\n  //           `https://restcountries.com/v3.1/region/${input}`\r\n  //         );\r\n  //         console.log(response.data);\r\n  //         setCountries(response.data);\r\n  //       } catch (error) {\r\n  //         console.error(\"Error fetching data:\", error);\r\n  //       }\r\n  //     }\r\n  //   };\r\n  //   searchCountry();\r\n  // }, [input, selected]);\r\n  // useEffect(() => {\r\n  //   const searchCountry = async () => {\r\n  //     if (selected === \"Filter By Region\" && input === \"\") {\r\n  //       try {\r\n  //         const response = await axios.get(\r\n  //           `https://restcountries.com/v3.1/region/${\"africa\"}`\r\n  //         );\r\n  //         setCountries(response.data);\r\n  //       } catch (error) {\r\n  //         console.error(\"Error fetching data:\", error);\r\n  //       }\r\n  //     } else if (selected !== \"Filter By Region\") {\r\n  //       try {\r\n  //         const response = await axios.get(\r\n  //           `https://restcountries.com/v3.1/region/${selected}`\r\n  //         );\r\n  //         setCountries(response.data);\r\n  //       } catch (error) {\r\n  //         console.error(\"Error fetching data:\", error);\r\n  //       }\r\n  //     } else {\r\n  //       try {\r\n  //         const response = await axios.get(\r\n  //           `https://restcountries.com/v3.1/name/${input}`\r\n  //         );\r\n  //         console.log(response.data);\r\n  //         setCountries(response.data);\r\n  //       } catch (error) {\r\n  //         console.error(\"Error fetching data:\", error);\r\n  //       }\r\n  //     }\r\n  //   };\r\n  //   searchCountry();\r\n  // }, [input, selected,countries]);\r\n\r\n  // useEffect(() => {\r\n  //   const searchCountry = async () => {\r\n  // try {\r\n  //   const response = await axios.get(\r\n  //     `https://restcountries.com/v3.1/name/${input}`\r\n  //   );\r\n  //   console.log(response.data);\r\n  //   setCountries(response.data);\r\n  // } catch (error) {\r\n  //   console.error(\"Error fetching data:\", error);\r\n  // }\r\n  //   };\r\n  //   searchCountry();\r\n  // }, [input,countries]);\r\n\r\n  // useEffect(() => {\r\n  //   const searchCountry = async () => {\r\n  //     if (selected !== \"Filter By Region\" ) {\r\n  //       try {\r\n  //         const response = await axios.get(\r\n  //           `https://restcountries.com/v3.1/region/${selected}`\r\n  //         );\r\n  //         setCountries(response.data);\r\n  //       } catch (error) {\r\n  //         console.error(\"Error fetching data:\", error);\r\n  //       }\r\n  //     } else {\r\n  //       try {\r\n  //         const response = await axios.get(\r\n  //           `https://restcountries.com/v3.1/region/${\"africa\"}`\r\n  //         );\r\n  //         setCountries(response.data);\r\n  //       } catch (error) {\r\n  //         console.error(\"Error fetching data:\", error);\r\n  //       }\r\n  //     }\r\n  //   };\r\n  //   searchCountry();\r\n  // }, [selected]);\r\n\r\n  return (\r\n    <div className=\"main-div\">\r\n      <main>\r\n        <div className=\"input-search-dropdown\">\r\n          <FormInput sendSearchParam={searchParam} />\r\n          <Dropdown\r\n            onSelect={getCountryByRegion}\r\n            selected={selected}\r\n            setSelected={setSelected}\r\n          />\r\n        </div>\r\n        <Router>\r\n          <div>\r\n            <Routes>\r\n              <Route\r\n                path=\"/\"\r\n                exact\r\n                element={<CountryCards countries={countries} />}\r\n              />\r\n\r\n              <Route\r\n                path=\"/country/:countryCode\"\r\n                element={<Detailspage countries={countries} />}\r\n              />\r\n            </Routes>\r\n          </div>\r\n        </Router>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nexport default Main;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAO,cAAc;AACrB,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,QAAQ;AAC9B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,WAAW,MAAM,WAAW;AACnC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C;EACA,MAAMO,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnC,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,uCAAsCF,KAAM,EAAC,CAAC;MACvE,IAAI,CAACC,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MACzD,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAC7BR,YAAY,CAACO,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EACD;;EAEA;EACArB,SAAS,CAAC,MAAM;IACd,MAAMuB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAE,oCAAmC,CAAC;QACtEb,YAAY,CAACY,QAAQ,CAACL,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IACDE,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,kBAAkB,GAAG,MAAOC,UAAU,IAAK;IAC/C,IAAI;MACF,MAAMZ,GAAG,GAAG,MAAMC,KAAK,CACpB,yCAAwCW,UAAW,EACtD,CAAC;MACD,IAAI,CAACZ,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MACzD,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;MAC7BR,YAAY,CAACO,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EACD;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEb,OAAA;IAAKoB,SAAS,EAAC,UAAU;IAAAC,QAAA,eACvBrB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAKoB,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBACpCrB,OAAA,CAACL,SAAS;UAAC2B,eAAe,EAAEjB;QAAY;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3C1B,OAAA,CAACN,QAAQ;UACPiC,QAAQ,EAAET,kBAAmB;UAC7BU,QAAQ,EAAEA,QAAS;UACnBC,WAAW,EAAEA;QAAY;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1B,OAAA,CAACX,MAAM;QAAAgC,QAAA,eACLrB,OAAA;UAAAqB,QAAA,eACErB,OAAA,CAACT,MAAM;YAAA8B,QAAA,gBACLrB,OAAA,CAACV,KAAK;cACJwC,IAAI,EAAC,GAAG;cACRC,KAAK;cACLC,OAAO,eAAEhC,OAAA,CAACJ,YAAY;gBAACO,SAAS,EAAEA;cAAU;gBAAAoB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjD,CAAC,eAEF1B,OAAA,CAACV,KAAK;cACJwC,IAAI,EAAC,uBAAuB;cAC5BE,OAAO,eAAEhC,OAAA,CAACH,WAAW;gBAACM,SAAS,EAAEA;cAAU;gBAAAoB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAE;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACxB,EAAA,CA5LQD,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AA6Lb,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}